import dotenv from "dotenv";

dotenv.config();

const targetBase = process.argv[2] ?? `http://localhost:${process.env.PORT ?? 4000}`;

type PentestCheck = {
	name: string;
	path: string;
	method: "GET" | "POST";
	body?: Record<string, unknown>;
	expectedStatus?: number;
};

const checks: PentestCheck[] = [
	{
		name: "Health endpoint",
		path: "/health",
		method: "GET",
		expectedStatus: 200
	},
	{
		name: "SQL injection login probe",
		path: "/auth/login",
		method: "POST",
		body: {
			email: "test@example.com' OR '1'='1",
			password: "anything123"
		},
		expectedStatus: 401
	},
	{
		name: "XSS memo payload",
		path: "/transactions/transfer",
		method: "POST",
		body: {
			sourceAccountId: "00000000-0000-0000-0000-000000000000",
			destinationAccountId: "00000000-0000-0000-0000-000000000001",
			amount: 1,
			currency: "USD",
			memo: "<script>alert('xss')</script>"
		},
		expectedStatus: 401
	}
];

const runCheck = async (check: PentestCheck) => {
	const url = `${targetBase}${check.path}`;
	const response = await fetch(url, {
		method: check.method,
		headers: {
			"Content-Type": "application/json"
		},
		body: check.body ? JSON.stringify(check.body) : undefined
	});

	const passed =
		typeof check.expectedStatus === "number"
			? response.status === check.expectedStatus
			: response.status >= 400;

	let details: string;
	if (!passed) {
		details = await response.text();
	} else {
		details = `${response.status}`;
	}

	return {
		name: check.name,
		passed,
		status: response.status,
		details
	};
};

const run = async () => {
	// eslint-disable-next-line no-console
	console.log(`Running security probes against ${targetBase}`);

	for (const check of checks) {
		try {
			const result = await runCheck(check);
			const status = result.passed ? "PASS" : "FAIL";
			// eslint-disable-next-line no-console
			console.log(`${status} :: ${result.name} -> ${result.status} ${result.details}`);
		} catch (error) {
			// eslint-disable-next-line no-console
			console.error(`ERROR :: ${check.name} ->`, error);
		}
	}
};

run().catch((error) => {
	// eslint-disable-next-line no-console
	console.error("Pentest script terminated with error", error);
	process.exitCode = 1;
});
